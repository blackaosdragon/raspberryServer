const express = require('express');
const app = express();
const https = require('https');
const fs = require('fs');
const path = require('path');
const bodyParser = require('body-parser');
const admin = require('firebase-admin');
const serviceAccount = require("/home/ubuntu/home-8bea3-firebase-adminsdk-ilfkz-544a451f7b.json");

admin.initializeApp({
  credential: admin.credential.cert(serviceAccount),
  databaseURL: 'https://home-8bea3.firebaseio.com/'
});

const registrationTokens = [
 'coB2bWwL-HbrVSa2ItiJQY:APA91bGuBtz2d6PIbk4YoM-9yf_J4Xue9T9L0XRez4fuCumii5GxTkt5IFesUvmqZegPUnWWa1Dnx9_NSM5XF-Yhg5rL80oyu10ZQGvYUerKdqucN3up3fbqnnmpUxZ3wqo3GY629UEr'
]

let dataGlobal = "";

//libreria del puerto serial
const puerto = 443; //puerto por donde se encuentra el servidor
/*
const server = app.listen(puerto,()=>{
  console.log(`Servidor abierto en el puerto ${puerto}`);
});
*/

const httpServer = https.createServer({
 key: fs.readFileSync(path.resolve('/home/ubuntu/privkey.pem')),
 cert: fs.readFileSync(path.resolve('/home/ubuntu/cert.pem'))

},app)

httpServer.listen(puerto,()=>{
 console.log(`Servidor disponible en el puerto ${puerto}`);
})

const SerialPort = require('serialport');
const Readline = SerialPort.parsers.Readline;
const port = new SerialPort('/dev/ttyUSB0');
//const parser = port.pipe(new ReadLine({delimiter: '\r\n'}));
const parser = port.pipe(new Readline({delimiter: '\r\n'}));
const io = require('socket.io')(httpServer);

// este es elcodigo anterior que si funciona

let tempString = "";
let tempFloat = 0.0;
let notifiOficina = {
  data: {
    title: "Alerta",
    body: "Cuerpo"
}
}

parser.on('data',(temp)=>{
 dataGlobal = temp;
 io.emit('temp',temp);
 for (let i = 15; i <= 18; i++){
   tempString = tempString+dataGlobal[i];
 }
 tempFloat = parseFloat(tempString);
 if (tempFloat > 25.0 && tempFloat < 27.9){
   console.log("Notificacion de precaucion");
   let notifiOficina = {
     notification: {
      title: "Advertencia",
      body: `La temperatura supera los ${tempFloat}Â°C revisar el sensor`
     }
     tokens: registrationTokens,
 /*

 admin.messaging().sendToDevice(<Token de registro>,notifiJSON,options).then(response=>{
console.log("Satisfactorio el envio de mensaje",response);
}).catch((err)=>{
console.log("Error al enviar mensaje", err);
})

 */
   }
 } else if (temp > 28.0){
  console.log("Notificacion de alerta");
}
 console.log(tempFloat);
 tempString = "";
})



//nuevo codigo
/*
parser.on('data',temp =>{
 console.log(datoGlobal);
 io.emit('temp',{ temperatura: temp });
 })
*/



app.use(function(req,res,next){
  res.setHeader('Access-Control-Allow-Origin','*');
  res.header('Access-Control-Allow-Headers', 'Authorization, X-API-KEY, Origin, X-Requested-With, Content-Type, Accept, Access-COntrol-Allow-Request-Method');
  res.header('Access-Control-Allow-Methods', 'GET, POST, OPTIONS, PUT, DELETE');
  res.header('Allow', 'GET, POST, OPTIONS, PUT, DELETE');
  next();
});
app.use(express.static(__dirname + '/public'));
app.use(bodyParser.urlencoded({extend: false}));
app.use(bodyParser.json());

let dataSensor = {
 sensor: 'Taller',
 ubicacion: 'Planta baja',
}
let sensorVariable = {
 sensor: 'Bodega',
 ubicacion: 'Planta baja'
}


app.get('/sensor',function (req,res){
 //res.send(dataGlobal[4])
 if(dataGlobal[4]==='1'){
  let sValor = "";
  let fValor = 0;
 for(let i = 15; i <= 18; i++){
  sValor = sValor + dataGlobal[i];
 }
  //takeValor(sValor,dataGlobal);
  fValor = parseFloat(sValor);
  let registro = new Date;
  let response = {
  temperatura: fValor,
  info: dataSensor,
  fecha: registro.getMonth() + " / " + registro.getDate() + " / " + registro.getFullYear(),
  hora: registro.getHours() + ":" + registro.getMinutes() + ":" + registro.getSeconds()
  }
 res.send(response);
 }
 if(dataGlobal[4]==='3'){
  let sValor = "";
  let fValor = 0;
  let registro = new Date;
  for (let i = 15; i <= 18; i++){
   sValor = sValor + dataGlobal[i];
   fValor = parseFloat(sValor);
  }
  let response = {
   temperatura: fValor,
   info: sensorVariable,
   fecha: registro.getMonth() + " / " + registro.getDate() + " / " + registro.getFullYear(),
   hora: registro.getHours() + ":" + registro.getMinutes() + ":" + registro.getSeconds()
  }
 res.send(response);
 }
 if(dataGlobal[4]==='2'){
  let sValor = "";
  let fValor = 0;
  let registro = new Date;
  for (let i = 15; i<=18; i++){
    sValor = sValor + dataGlobal[i];
    fValor = parseFloat(sValor);
  }
   let response = {
   temperatura: fValor,
   info: sensorVariable,
   fecha: registro.getMonth() + " / " + registro.getDate() + " / " + registro.getFullYear(),
   hora: registro.getHours() + ":" + registro.getMinutes() + ":" + registro.getSeconds()
  }
  res.send(response);
 }

})

/*
function takeValor(sValor,dataGlobal){
 for(let i = 15; i <= 19; i++){
  sValor = sValor + dataGlobal[i];
 }
}
*/
